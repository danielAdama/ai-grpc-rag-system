name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create .env file dynamically
      run: |
        echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" > .env
        echo "QDRANT_API_KEY=${{ secrets.QDRANT_API_KEY }}" >> .env
        echo "QDRANT_URL=${{ secrets.QDRANT_URL }}" >> .env
        echo "REDIS_DB=${{ secrets.REDIS_DB }}" >> .env
        echo "REDIS_HOST=${{ secrets.REDIS_HOST }}" >> .env
        echo "REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}" >> .env
        echo "REDIS_PORT=${{ secrets.REDIS_PORT }}" >> .env

    - name: Print environment variables
      run: |
        cat .env

    - name: Run tests
      run: |
        # Activate the virtual environment if you're using one
        # source venv/bin/activate
        # Then install python-dotenv if it's not already installed
        # pip install python-dotenv
        # Load the .env file into the environment
        python -c "import os; import dotenv; dotenv.load_dotenv('.env'); os.system('pytest')"
